(rule
 (target libgccjit.pc)
 (enabled_if
  (= %{system} macosx))
 (action
  (with-stdout-to
   %{target}
   (progn
    (echo "Name: libgccjit\nDescription: GCC JIT\nVersion: 0\n")
    (echo "Cflags: -I/usr/local/include -I/opt/homebrew/include\n")
    (echo
     "Libs: -lgccjit -L/usr/local/lib/gcc/current -L/opt/homebrew/lib/gcc/current")))))

(rule
 (target libgccjit.pc)
 (enabled_if
  (and
   (<> %{system} macosx)
   (<> %{system} freebsd)))
 (action
  (with-stdout-to
   %{target}
   (progn
    (echo "Name: libgccjit\nDescription: GCC JIT\nVersion: 0\n")
    (echo "Cflags: -I/opt/local/include -I/usr/local/include\n")
    (echo "Libs: -lgccjit -L/usr/local/lib")))))

(rule
 (target libgccjit.pc)
 (enabled_if
  (or
   (= %{system} freebsd)))
 (action
  (with-stdout-to
   %{target}
   (progn
    (echo "Name: libgccjit\nDescription: GCC JIT\nVersion: 0\n")
    (echo "Cflags: -I/usr/local/include\n")
    (echo
     "Libs: -L/usr/local/lib -L/usr/local/lib/gcc12 -Wl,-rpath=/usr/local/lib/gcc12 -L/usr/local/lib/gcc13 -Wl,-rpath=/usr/local/lib/gcc13")))))

(env
 (_
  (env-vars
   (PKG_CONFIG_PATH "./"))))

(library
 (public_name gccjit)
 (name gccjit)
 (libraries ctypes.foreign)
 (modes byte native)
 (flags :standard -verbose -w -9-27)
 (ctypes
  (deps libgccjit.pc)
  (external_library_name libgccjit)
  (build_flags_resolver pkg_config)
  (headers
   (include "libgccjit.h"))
  (type_description
   (instance Types)
   (functor Gccjit_bindings_types))
  (function_description
   (concurrency unlocked)
   (instance Functions)
   (functor Gccjit_bindings))
  (generated_types Types_generated)
  (generated_entry_point C)))

(documentation)

(rule
 (alias upload-doc)
 ; This doesn't work, why? So, need to dune build @doc first.
 ; (deps (alias doc))
 (action
  (progn
   (run cp -rf ../_doc/_html ../../../doc/)
   (run git add -A ../../../doc)
   (run git commit ../../../doc -m "Update generated API docs")
   (run git push origin master))))
